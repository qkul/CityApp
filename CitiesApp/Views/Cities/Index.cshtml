@using CitiesApp.Controllers;
@model PaginatedList<CitiesApp.Models.City>
@{
    ViewData["Title"] = "CityApp";
}
<h2>City Application</h2>
<p>
    <a asp-action="Create" class="btn btn-primary" role="button">Create New</a>
</p>
<a asp-action="Index" class="btn btn-primary btn-xs dropdown-toggle" role="button">Back to Full List</a>

@using (Html.BeginForm("Index", "Cities", FormMethod.Get))
{
    <p>
        City name: <input type="search" name="searchName" value="@ViewData["StrSearchName"]" />
        <button type="submit" class="btn btn-default btn-sm dropdown-toggle">
            <span class="glyphicon glyphicon-search"></span> Filter
        </button>
    </p>
}
<table class="table table-hover">
    <thead>
        <tr>
            <th>
                @*@Html.ActionLink("City", "Index", new { sortOrder = ViewBag.NameSort })*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">City</a>
            </th>
            <th>
                Country
            </th>
            <th>
                YearOfCreation
            </th>
            <th>
                @*@Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSort })*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["RatingSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Rating</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.YearOfCreation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-xs dropdown-toggle" role="button">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-primary btn-xs dropdown-toggle" role="button">Delete</a>
                    <a asp-action="More" asp-route-id="@item.Id" class="btn btn-primary btn-xs dropdown-toggle" role="button">More</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
