@using CitiesApp.Controllers;
@model PaginatedList<CitiesApp.Models.City>
@{
    ViewData["Title"] = "CityApp";
}

<div class="container text-white">
    <h2>City Application</h2>
    <p>
        <a asp-action="Create" class="btn btn-elegant btn-sm"> <i class="fas fa-city"> Create New</i> </a>
    </p>
    <a asp-action="Index" class="btn btn-elegant btn-sm"> <i class="far fa-list-alt"> Back to Full List</i> </a>
    @using (Html.BeginForm("Index", "Cities", FormMethod.Get))
    {
        <p>
            City name: <input type="search" name="searchName" value="@ViewData["StrSearchName"]" />
            <button type="submit" class="btn btn-elegant btn-sm">
                <i class="fas fa-search"> Filter</i>
            </button>
        </p>
    }
    <table class="table table-hover">
        <thead >
            <tr>
                <th>
                    @*@Html.ActionLink("City", "Index", new { sortOrder = ViewBag.NameSort })*@
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">City</a>
                </th>
                <th>
                    Country
                </th>
                <th>
                    Year of creation
                </th>
                <th>
                    @*@Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSort })*@
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["RatingSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Rating</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.YearOfCreation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info btn-rounded">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id"  class="btn btn-info btn-rounded">Delete</a>
                        <a asp-action="More" asp-route-id="@item.Id" class="btn btn-info btn-rounded">More</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-elegant btn-sm @prevDisabled">
        <i class="fas fa-angle-left"></i> PREVIOUS
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-elegant btn-sm @nextDisabled">
        NEXT <i class="fas fa-angle-right"></i>
    </a>
</div>
